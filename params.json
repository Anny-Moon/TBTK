{"name":"TBTK","tagline":"Tight-Binding ToolKit","body":"# Welcome to the project page for TBTK\r\nTBTK is a c++ library for solving general bilinear Hamiltonians, and a flexible indexing scheme allows for general models to be setup with little effort.\r\nThe model can either be solved using a DiagonaliztionSolver, giving eigenstates and eigenvectors, or using a ChebyshevSolver to calculate Green's functions.\r\n\r\n##Introductory material\r\n[Presentation](https://github.com/dafer45/TBTK/blob/gh-pages/files/presentation.pdf)  \r\n[Templates](https://github.com/dafer45/TBTK/tree/master/Templates) (See src/main.cpp in each template folder)\r\n\r\n##Example\r\nSetting up and diagonalizing a two dimensional tight-binding model with chemical potential mu and nearest neighbor hopping t.\r\n\r\n\t//Create model and set up hopping parameters\r\n\tModel model;\r\n\tfor(int x = 0; x < SIZE_X; x++){\r\n\t\tfor(int y = 0; y < SIZE_Y; y++){\r\n\t\t\tfor(int s = 0; s < 2; s++){\r\n\t\t\t\t//Add hopping amplitudes corresponding to chemical potential\r\n\t\t\t\tmodel.addHA(HoppingAmplitude(-mu,\t{x, y, s},\t{x, y, s}));\r\n\r\n\t\t\t\t//Add hopping amplitudes corresponding to t\r\n\t\t\t\tif(x+1 < SIZE_X)\r\n\t\t\t\t\tmodel.addHAAndHC(HoppingAmplitude(-t,\t{(x+1)%SIZE_X, y, s},\t{x, y, s}));\r\n\t\t\t\tif(y+1 < SIZE_Y)\r\n\t\t\t\t\tmodel.addHAAndHC(HoppingAmplitude(-t,\t{x, (y+1)%SIZE_Y, s},\t{x, y, s}));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//Construct model\r\n\tmodel.construct();\r\n\r\n\t//Setup and run DiagonalizationSolver\r\n\tDiagonalizationSolver dSolver;\r\n\tdSolver.setModel(&model);\r\n\tdSolver.run();\r\n\r\n\t//Set filename and remove any file already in the folder\r\n\tFileWriter::setFileName(\"TBTKResults.h5\");\r\n\tFileWriter::clear();\r\n\r\n\t//Create PropertyExtractor\r\n\tPropertyExtractor pe(&dSolver);\r\n\r\n\t//Extract eigenvalues and write these to file\r\n\tdouble *ev = pe.getEV();\r\n\tFileWriter::writeEV(ev, model.getBasisSize());\r\n\tdelete [] ev;","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}