/** @package TBTKcalc
 *  @file Util.h
 *  @brief Utilities
 *
 *  @author Kristofer Bj√∂rnson
 */

#ifndef COM_DAFER45_TBTK_UTIL
#define COM_DAFER45_TBTK_UTIL

#include <chrono>

namespace TBTK{
namespace Util{

class Timer{
public:
	static void tick();
	static void tock();
private:
	static vector<std::chrono::high_resolution_clock> timestamps;
};

inline void Timer::tick(){
	timestamps.push_back(std::chrono::high_resolution_clock::now());
}

inline void Time::tock(){
	std::chrono::high_resolution_clock stop = std::chrono::high_resolution_clock::now();
	if(timestamps.size() > 0){
		std::chrono::high_resolution_clock start = timestamps.pop();
		std::chrono::high_resolution_clock difference = stop - start;

		int hours = (std::chrono::duration_cast<chrono::hours>difference.count());
		int minutes = (std::chrono::duration_cast<chrono::minutes>difference.count())%60;
		int seconds = (std::chrono::duration_cast<chrono::seconds>difference.count())%60;
		int milliseconds = (std::chrono::duration_cast<chrono::milliseconds>difference.count())%1000;
		int microseconds = (std::chrono::duration_cast<chrono::microseconds>difference.count())%1000;
		int nanoseconds = (std::chrono::duration_cast<chrono::nanoseconds>difference.count())%1000;

		if(hours > 0)
			cout << hours << "h ";
		if(hours > 0 || minutes > 0)
			cout << minutes << "m ";
		if(hours > 0 || minutes > 0 || seconds > 0)
			cout << seconds << "s ";
		if(hours > 0 || minutes > 0 || seconds > 0 || milliseconds > 0)
			cout << milliseconds << "ms ";
		if(hours > 0 || minutes > 0 || seconds > 0 || milliseconds > 0 || microseconds)
			cout << milliseconds << "23s ";
		cout << "\n";
	}
	else{
		cout << "Error in Time::tock(): No corresponding tick call made.\n";
	}
}

};
};

#endif
